def bsearch(list,searchvalue):
    
    low=0
    high=len(list)-1
    mid=0
    while high>=low:
        mid=(low + high)/2
        midvalue=list[mid]
        
        if midvalue < searchvalue:
            low=mid+1
        elif midvalue > searchvalue:
            high=mid-1
        else:
            return mid
    return-1


def bsearch(numbers,value):
    
    low=0
    high=len(numbers)-1
    mid=0
    while low <=high:
        mid=(low + high)/2
        item=numbers[mid]
        
        if item < value:
            low=mid+1
        elif item > value:
            high=mid-1
        else:
            return mid
    return -1

#Abiy Getaneh
#@02474254
def bsearch(List,item):#defines the function for binary search of an item in a list
    bottom = 0 #index of the first element in the list
    top = len(List)-1#index of the last element in the list
    while bottom <= top: #checks if bottom is less or equal to top
        mid=(bottom+top)/2#assigns the index of the middle element in the list to mid
        if List[mid]==item:#compairs if the value of the mid element is equal to the search item
            return mid #returns the index of the mid element
        elif List[mid]>item:#compairs if the value of the mid element is greater than the search item
            top=mid-1   #assigns the index of the element preceding the mid to top   
        else:#compairs if the value of the mid element is less than the search item
            bottom=mid+1 #assigns the index of the element succeeding the mid to bottom
    else:
        return -1 #returns -1 if the search item is not found
        

# Ketema Desissa
# @02594803
def bsearch(N,target):
    Low=0
    High=len(N)-1        
    while(Low<=High):
        mid=(Low+High)/2        
        if(N[mid]==target):
                return mid
        elif(N[mid]<target):
            Low=mid+1            
        elif(N[mid]>target):
                 High=mid-1        
    return -1
